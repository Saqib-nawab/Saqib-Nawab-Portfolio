[{"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/index.js":"1","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/App.js":"2","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/reportWebVitals.js":"3","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Banner.js":"4","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Contact.js":"5","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/NavBar.js":"6","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Footer.js":"7","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Skills.js":"8","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Projects.js":"9","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/ProjectCard.js":"10","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/MailchimpForm.js":"11","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Newsletter.js":"12"},{"size":535,"mtime":1707830586816,"results":"13","hashOfConfig":"14"},{"size":579,"mtime":1707830586788,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1707830586816,"results":"16","hashOfConfig":"14"},{"size":2787,"mtime":1707886029605,"results":"17","hashOfConfig":"14"},{"size":3717,"mtime":1707830586813,"results":"18","hashOfConfig":"14"},{"size":2761,"mtime":1707885840311,"results":"19","hashOfConfig":"14"},{"size":1154,"mtime":1707975213882,"results":"20","hashOfConfig":"14"},{"size":2905,"mtime":1707886893083,"results":"21","hashOfConfig":"14"},{"size":5285,"mtime":1707979761293,"results":"22","hashOfConfig":"14"},{"size":359,"mtime":1707830586814,"results":"23","hashOfConfig":"14"},{"size":725,"mtime":1708153541152,"results":"24","hashOfConfig":"14"},{"size":1387,"mtime":1707830586814,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1dsl6z5",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/index.js",[],[],[],"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/App.js",["70"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/reportWebVitals.js",[],[],"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Banner.js",["71","72"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/header-img.svg\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"Full Stack\", \"Web Developer\"];\n  const period = 200;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Saqib,`} <span className=\"txt-rotate\" dataPeriod=\"500\" data-rotate='[ \"Full Stack\", \"Web developer\"]'><span className=\"wrap\">{text}</span></span></h1>\n                  <p>Front-end magician, back-end architect, full-stack problem-solver. I craft captivating web experiences with the MERN stack, turning ideas into reality. Let's code your vision together!</p>\n                  <button onClick={() => console.log('connect')}>Letâ€™s Connect <ArrowRightCircle size={25} /></button>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Contact.js",["73"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: 'Message sent successfully'});\n    } else {\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n                <form onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col size={12} className=\"px-1\">\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                      <button type=\"submit\"><span>{buttonText}</span></button>\n                    </Col>\n                    {\n                      status.message &&\n                      <Col>\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                      </Col>\n                    }\n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/NavBar.js",[],[],"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Footer.js",["74","75","76"],[],"import { Container, Row, Col } from \"react-bootstrap\";\nimport { MailchimpForm } from \"./MailchimpForm\";\nimport logo from '../assets/img/logofinal.png';\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\nimport navIcon4 from '../assets/img/nav-icon4.svg';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <MailchimpForm />\n          <Col size={12} sm={6}>\n            <img src={logo} alt=\"Logo\" />\n          </Col>\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\n            <div className=\"social-icon\">\n              <a href=\"#\"><img src={navIcon1} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon2} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon3} alt=\"Icon\" /></a>\n              <a href=\"https://github.com/Saqib-nawab\"><img src={navIcon4} alt=\"\" /></a>\n            </div>\n            <p>Copyright 2024. All Rights Reserved</p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Skills.js",["77","78","79","80","81","82","83","84","85","86","87"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"skill-bx wow zoomIn\">\n              <h2>Skills</h2>\n              <p>I possess a comprehensive skill set encompassing MongoDB, Express.js, React.js, Node.js, HTML/CSS, JavaScript (ES6+), Git, npm/yarn, Docker/Heroku, testing/debugging, RESTful API design, security principles, cross-platform compatibility, problem-solving, and a commitment to continuous learning.</p>\n              <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>JavaScript (ES6+)</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter2} alt=\"Image\" />\n                  <h5>React.js</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter3} alt=\"Image\" />\n                  <h5>Node.js</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>Package Managers</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>RESTful API Design</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>Version Control (e.g., Git)</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter2} alt=\"Image\" />\n                  <h5>MongoDB</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter2} alt=\"Image\" />\n                  <h5>Express.js</h5>\n                </div>\n              </Carousel>\n            </div>\n          </div>\n        </div>\n      </div>\n      <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Projects.js",["88"],[],"import { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport projImg1 from \"../assets/img/project-img1.png\";\nimport projImg2 from \"../assets/img/project-img2.png\";\nimport projImg3 from \"../assets/img/project-img3.png\";\nimport projImg4 from \"../assets/img/project-img4.png\";\nimport projImg5 from \"../assets/img/project-img5.png\";\nimport projImg6 from \"../assets/img/project-img6.png\";\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Projects = () => {\n\n  const projects = [\n    {\n      title: \"Van-Life\",\n      description: \"Van renting Web App for tourists\",\n      imgUrl: projImg1,\n      link: \"https://github.com/Saqib-nawab/vanlife-master\"\n    },\n    {\n      title: \"Spotify Clone\",\n      description: \"Music Web App\",\n      imgUrl: projImg2,\n      link: \"https://github.com/Saqib-nawab/spotify-clone-Project\"\n    },\n    {\n      title: \"News App\",\n      description: \"News API-driven Web Application\",\n      imgUrl: projImg3,\n      link: \"https://github.com/Saqib-nawab/News_Monkey\"\n    },\n    {\n      title: \"Youtube Backend\",\n      description: \"Production level videos serving back-end code\",\n      imgUrl: projImg4,\n      link: \"https://github.com/Saqib-nawab/Youtube-backend\"\n    },\n    {\n      title: \"Budget Allocation App\",\n      description: \"Company Budget Management Application\",\n      imgUrl: projImg5,\n      link: \"https://github.com/Saqib-nawab/Budget-Allocation-Application\"\n    },\n    {\n      title: \"InoteBook\",\n      description: \"App for keeping track of user daily reminders\",\n      imgUrl: projImg6,\n      link: \"https://github.com/Saqib-nawab/inotebook\"\n    },\n  ];\n\n  return (\n    <section className=\"project\" id=\"projects\">\n      <Container>\n        <Row>\n          <Col size={12}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                  <h2>Projects</h2>\n                  <p>Throughout my web development journey, I've completed a range of projects, including:\n\n                    Vanlife: A van renting app for adventurous souls.\n                    Spotify Music Clone: Bringing the Spotify experience to life.\n                    NewsMonkey: Your source for diverse news stories.\n                    Budget Allocation App: Streamlining business finances.\n                    Inotebook: Organizing daily notes and reminders.\n                    Each project reflects my dedication to creating immersive digital experiences.</p>\n                  <Tab.Container id=\"projects-tabs\" defaultActiveKey=\"first\">\n                    <Nav variant=\"pills\" className=\"nav-pills mb-5 justify-content-center align-items-center\" id=\"pills-tab\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"first\">Tab 1</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"third\">Tab 3</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n\n                    \n                    <Tab.Content id=\"slideInUp\" className={isVisible ? \"animate__animated animate__slideInUp\" : \"\"}>\n                      <Tab.Pane eventKey=\"first\">\n                        <Row>\n                          {\n                            projects.map((project, index) => {\n                              return (\n                                <ProjectCard\n                                  key={index}\n                                  {...project}\n                                />\n                              )\n                            })\n                          }\n                        </Row>\n                      </Tab.Pane>\n                      <Tab.Pane eventKey=\"second\">\n                        <Row>\n                          {\n                            projects.map((project, index) => {\n                              return (\n                                <ProjectCard\n                                  key={index}\n                                  {...project}\n                                />\n                              )\n                            })\n                          }\n                        </Row>\n                      </Tab.Pane>\n                      <Tab.Pane eventKey=\"third\">\n                        <Row>\n                          {\n                            projects.map((project, index) => {\n                              return (\n                                <ProjectCard\n                                  key={index}\n                                  {...project}\n                                />\n                              )\n                            })\n                          }\n                        </Row>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Tab.Container>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n      <img className=\"background-image-right\" src={colorSharp2}></img>\n    </section>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/ProjectCard.js",["89"],[],"import { Col } from \"react-bootstrap\";\n\nexport const ProjectCard = ({ title, description, imgUrl }) => {\n  return (\n    <Col size={12} sm={6} md={4}>\n      <div className=\"proj-imgbx\">\n        <img src={imgUrl} />\n        <div className=\"proj-txtx\">\n          <h4>{title}</h4>\n          <span>{description}</span>\n        </div>\n      </div>\n    </Col>\n  )\n}\n","/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/MailchimpForm.js",[],[],"/Users/saqibnawab/Desktop/projects/web-dev-projects/Saqib-Nawab-Portfolio/src/components/Newsletter.js",[],[],{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":13,"column":10,"nodeType":"92","messageId":"93","endLine":13,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":23,"column":6,"nodeType":"97","endLine":23,"endColumn":12,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":39,"column":21,"nodeType":"101","messageId":"102","endLine":39,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":20,"column":15,"nodeType":"105","endLine":20,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":21,"column":15,"nodeType":"105","endLine":21,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":22,"column":15,"nodeType":"105","endLine":22,"endColumn":27},{"ruleId":"90","severity":1,"message":"106","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},{"ruleId":"90","severity":1,"message":"107","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":41,"column":19,"nodeType":"105","endLine":41,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":45,"column":19,"nodeType":"105","endLine":45,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":49,"column":19,"nodeType":"105","endLine":49,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":53,"column":19,"nodeType":"105","endLine":53,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":57,"column":19,"nodeType":"105","endLine":57,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":61,"column":19,"nodeType":"105","endLine":61,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":65,"column":19,"nodeType":"105","endLine":65,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":69,"column":19,"nodeType":"105","endLine":69,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":77,"column":7,"nodeType":"105","endLine":77,"endColumn":77},{"ruleId":"110","severity":1,"message":"111","line":135,"column":7,"nodeType":"105","endLine":135,"endColumn":65},{"ruleId":"110","severity":1,"message":"111","line":7,"column":9,"nodeType":"105","endLine":7,"endColumn":29},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["112"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"113","fix":"114"},"Update the dependencies array to be: [delta, text, tick]",{"range":"115","text":"116"},[770,776],"[delta, text, tick]"]